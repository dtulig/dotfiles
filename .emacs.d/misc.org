* Window Systems
#+begin_src emacs-lisp
** All platforms
  (when window-system
    (setq frame-title-format '(buffer-file-name "%f" ("%b")))
    (blink-cursor-mode -1)
    (when (require 'mwheel nil 'no-error) (mouse-wheel-mode t)))

  (set-terminal-coding-system 'utf-8)
  (set-keyboard-coding-system 'utf-8)
  (prefer-coding-system 'utf-8)

  (setq visible-bell t
	echo-keystrokes 0.1
	font-lock-maximum-decoration t
	inhibit-startup-message t
	transient-mark-mode t
	color-theme-is-global t
	delete-by-moving-to-trash t
	shift-select-mode nil
	truncate-partial-width-windows nil
	uniquify-buffer-name-style 'forward
	whitespace-style '(trailing lines space-before-tab
				    indentation space-after-tab)
	whitespace-line-column 100
	ediff-window-setup-function 'ediff-setup-windows-plain
	;;oddmuse-directory (concat starter-kit-dir "oddmuse")
	xterm-mouse-mode t
	;;save-place-file (concat starter-kit-dir "places")
	)
#+end_src

** Disable bell on mac os x
#+begin_src emacs-lisp
  (when (memq window-system '(mac ns))
    (setq visible-bell nil)
    (setq ring-bell-function (lambda ()
			       (invert-face 'mode-line)
			       (run-with-timer 0.1 nil 'invert-face 'mode-line))))
#+end_src

* Remove window dressings
#+begin_src emacs-lisp
  (when window-system
    (tooltip-mode -1)
    (tool-bar-mode -1))

  (menu-bar-mode -1)

  (scroll-bar-mode -1)
#+end_src
* Keep backup files in tmp
#+begin_src emacs-lisp
  ;; (setq backup-directory-alist `(("." . ,(expand-file-name
  ;; 					"/tmp/backups"))))

  (setq backup-directory-alist
	`((".*" . ,temporary-file-directory)))
  (setq auto-save-file-name-transforms
	`((".*" ,temporary-file-directory t)))

#+end_src

* Show matching parens when on point
#+begin_src emacs-lisp
  (show-paren-mode 1)
#+end_src

* Save a list of recent files visited
#+begin_src emacs-lisp
  (recentf-mode 1)
#+end_src
* Misc within misc
#+begin_src emacs-lisp
  (defalias 'yes-or-no-p 'y-or-n-p)
#+end_src
* Font faces for todo, etc
#+begin_src emacs-lisp
  (setq fixme-modes '(rust-mode c++-mode c-mode emacs-lisp-mode rustic-mode))
  (make-face 'font-lock-fixme-face)
  (make-face 'font-lock-study-face)
  (make-face 'font-lock-important-face)
  (make-face 'font-lock-note-face)
  (mapc (lambda (mode)
	  (font-lock-add-keywords
	   mode
	   '(("\\<\\(TODO\\)" 1 'font-lock-fixme-face t)
	     ("\\<\\(STUDY\\)" 1 'font-lock-study-face t)
	     ("\\<\\(IMPORTANT\\)" 1 'font-lock-important-face t)
	     ("\\<\\(NOTE\\)" 1 'font-lock-note-face t))))
	fixme-modes)
  (modify-face 'font-lock-fixme-face "red" nil nil t nil t nil nil)
  (modify-face 'font-lock-study-face "orange" nil nil t nil t nil nil)
  (modify-face 'font-lock-important-face "orange" nil nil t nil t nil nil)
  (modify-face 'font-lock-note-face "forest green" nil nil t nil t nil nil)
#+end_src
