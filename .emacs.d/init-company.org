* Company Configuration.
#+BEGIN_SRC emacs-lisp
  (starter-kit-install-if-needed 'company)
#+END_SRC

#+BEGIN_SRC emacs-lisp
  (add-hook 'after-init-hook 'global-company-mode)
  (global-company-mode)

  (defvar company-mode/enable-yas t "Enable yasnippet for all backends.")

  (defun add-pcomplete-to-capf ()
    (add-hook 'completion-at-point-functions 'pcomplete-completions-at-point nil t))

  (add-hook 'org-mode-hook #'add-pcomplete-to-capf)

  (defun company-mode/backend-with-yas (backend)
    (if (or (not company-mode/enable-yas) (and (listp backend)    (member 'company-yasnippet backend)))
        backend
      (append (if (consp backend) backend (list backend))
              '(:with company-yasnippet))))

  (setq company-backends (mapcar #'company-mode/backend-with-yas company-backends))

  (defun indent-or-complete ()
    (interactive)
    (if (looking-at "\\_>")
        (company-complete-common)
      (indent-according-to-mode)))

  (global-set-key "\t" 'indent-or-complete)

  (setq company-idle-delay 0.1)

  (global-set-key (kbd "C-<tab>") 'company-complete)
#+END_SRC

 - When company and yasnippet are used together, they compete for the
   tab key for expansion. This checks to see if company has something
   to complete before running the tab.
   #+BEGIN_SRC emacs-lisp
     (defun company-yasnippet-or-completion ()
       (interactive)
       (let ((yas-fallback-behavior nil))
         (unless (yas-expand)
           (call-interactively #'company-complete-common))))

     (add-hook 'company-mode-hook (lambda ()
       (substitute-key-definition 'company-complete-common
                                  'company-yasnippet-or-completion
                                  company-active-map)))
   #+END_SRC
